#!/usr/bin/env bash

PG_HOST=127.0.0.1
PG_PORT=5432
PG_DATABASE=processing_test
PG_USER=postgres
PG_PASSWORD=postgres


function fun {	
	echo $*
	_FUN=$1

	shift
	ruby .dev/scripts/fun.rb $_FUN $*	
}


function _mvn {
	mvn $*
}

function configure {

	mkdir -p '.dev'
	fun 'init_db'

    rm -f .git/hooks/pre-receive
    echo "$FUN_hook_pre_receive" > .git/hooks/pre-receive    

    echo "Installed a pre-receive git hook"
}

function command_failed {
	if [ $? -ne 0 ] ; then
        echo $1
        exit 1
    fi	
}

function validate {

    nc -z $PG_HOST $PG_PORT 1>/dev/null 2>&1

    command_failed "Postgres $PG_HOST:$PG_PORT can't be reached"    
    echo "Postgres $PG_HOST:$PG_PORT is reachable"


    export PGPASSWORD=$PG_PASSWORD; psql -U $PG_USER -h $PG_HOST -p $PG_PORT -d $PG_DATABASE -c "select count(*) from processing.applications;" 1>/dev/null &2>1	   
    
    command_failed "Postgres $PG_HOST:$PG_PORT connection failed"
    echo "Postgres $PG_HOST:$PG_PORT connection succeeded"
}

function status {
	git status
	fun 'status'
}

function branch {
	_BRANCH=$1
	_HASH=$(git rev-parse HEAD)

	git checkout $_BRANCH
	command_failed

	fun 'switch_branch' $_BRANCH $_HASH
}

function pr {
	_BRANCH=${2:-PR$1}

	git fetch origin pull/$1/head:$_BRANCH
}

validate

case $1 in 
	mvn )
		shift ; _mvn $*
	;;
	git )
		shift ; _git $*
	;;
	pr )
		shift ; pr $*
	;;
	configure ) 
		shift ; configure $*
	;;
	branch )
		shift ; branch $*
	;;
	status )
		shift ; status $*
	;;
esac